<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_mockup_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Constants

GRAV = 0.3;
MAX_VSP = 12;
JUMP_SPEED = 5;
MOV_SPEED = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement and gravity

mov_direction = keyboard_check(vk_right) - keyboard_check(vk_left);
// -1 : going left
// +1 : going right
// 0 ; standing still

// Capping max gravity
if (global.vsp &lt; MAX_VSP) {
   global.vsp += GRAV;
}


// Downward gravity
if (global.g == "down") {
    // Apply gravity
    if (!place_free(x, y + 1)) { // If there's a floor beneath us
       global.vsp = -JUMP_SPEED * keyboard_check_pressed(vk_space);
    }
    if (place_free(x, y +global.vsp)) { // If the frame won't end into a wall
        y +=global.vsp;
    }
    else {
        while (place_free(x, y + sign(global.vsp))) { // Move until just before contact
            y += sign(global.vsp);
        }
    }
    
    if (mov_direction != 0) { // If we're moving
        if (place_free(x + (MOV_SPEED * mov_direction), y)) { // If we're not going into a wall
            x += MOV_SPEED * mov_direction; // Move
        }
        else {
            // Go to contact one pixel at a time
            while (place_free(x + mov_direction, y)) { 
                x += mov_direction;
            }
            // And get on that wall
            y -= 1;
            if (mov_direction &gt; 0) {
                global.g = "right";
            } 
            else {
               global.g = "left";
            }
        }
    }
}

// Rightward gravity
else if (global.g == "right") { 
    // Apply gravity
    if (!place_free(x+1, y)) { // If there's a floor beneath us
       global.vsp = -JUMP_SPEED * keyboard_check_pressed(vk_space);
    }
    if (place_free(x +global.vsp, y)) { // If the frame won't end into a wall
        x +=global.vsp;
    }
    else {
        while (place_free(x + sign(global.vsp), y)) { // Move until just before contact
            x += sign(global.vsp);
        }
    }
    
    if (mov_direction != 0) { // If we're moving
        if (place_free(x, y - MOV_SPEED * mov_direction)) { // If we're not going into a wall
            y -= MOV_SPEED * mov_direction; // Move
        }
        else {
            // Go to contact one pixel at a time
            while (place_free(x, y - mov_direction)) { 
                y -= mov_direction;
            }
            // And get on that wall
            x -= 1;
            if (mov_direction &gt; 0) {
               global.g = "up";
            } 
            else {
               global.g = "down";
            }
        }
    }
}
                
// Leftward gravity
else if (global.g == "left") {  
    // Apply gravity
    if (!place_free(x-1, y)) { // If there's a floor beneath us
       global.vsp = -JUMP_SPEED * keyboard_check_pressed(vk_space);
    }
    if (place_free(x -global.vsp, y)) { // If the frame won't end into a wall
        x -=global.vsp;
    }
    else {
        while (place_free(x - sign(global.vsp), y)) { // Move until just before contact
            x -= sign(global.vsp);
        }
    }

    if (mov_direction != 0) { // If we're moving
        if (place_free(x, y + MOV_SPEED * mov_direction)) { // If we're not going into a wall
            y += MOV_SPEED * mov_direction; // Move
        }
        else {
            // Go to contact one pixel at a time
            while (place_free(x, y + mov_direction)) { 
                y += mov_direction;
            }
            // And get on that wall
            x += 1;
            if (mov_direction &gt; 0) {
               global.g = "down";
            } 
            else {
               global.g = "up";
            }
        }
    }
}

// Upward gravity
else if (global.g == "up") { 
    // Apply gravity
    if (!place_free(x, y-1)) {
       global.vsp = -JUMP_SPEED * keyboard_check_pressed(vk_space);
    }
    if (place_free(x, y -global.vsp)) {
        y -=global.vsp;
    }
    else {
        while (place_free(x, y - sign(global.vsp))) {
            y -= sign(global.vsp);
        }
    }
    
    if (mov_direction != 0) { // If we're moving
        if (place_free (x - MOV_SPEED * mov_direction, y)) { // If we're not going into a wall
            x -= MOV_SPEED * mov_direction; // Move
        }
        else {
            // Go to contact one pixel at a time
            while (place_free(x - mov_direction, y)) { 
                x -= mov_direction;
            }
            // And get on that wall
            y += 1;
            if (mov_direction &gt; 0) {
               global.g = "left";
            } 
            else {
               global.g = "right";
            }
        }
    }
}

else {
    show_error("Gravity incorrectly set", false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_goto_room3">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>Set_exit</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>room_3</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_goto_room2">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>Set_exit</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>room_2</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_goto_room1">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>Set_exit</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>room_1</room>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
